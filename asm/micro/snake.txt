; last snake direction  = 0x00
; snake length          = 0x01
; food pos              = 0x02
; snake pos             = 0x40 - 0x7f

imh rb  0                   ; set snake's direction to right
iml rb  0
mov ra  rb
iml ra  4
st  ra

iml rb  1                   ; set snake's length to 0
iml ra  0
st  ra

imh rb  4                   ; set snake's position to (3, 3)
iml rb  0
imh ra  3
iml ra  3
st  ra

label gen_food
    in  rd  1               ; input random value from port 1
    imh ra  7               ; mask 0b01110111
    iml ra  7               ; could make the input randomize
    and rd                  ; just those 6 bits but ok
    imh rb  0               ; store to 0x02
    iml rb  2
    st  ra
    xor ra
    jz  eat_fin

xor ra
jz loop

label loop
    ; ------ shift snake's positions
    imh rb  4
    iml rb  0
    label shift_snake
        ld  rd              ; rd <- ram[i]
        imh ra  15          ; i -= 1
        iml ra  15
        add rb
        mov rb  ra
        st  rd              ; ram[i] <- rd
        imh ra  0           ; i += 2
        iml ra  2
        add rb
        mov rb  ra
        imh ra  8
        iml ra  0
        sub rb
        jz  shift_snake_end

        xor ra
        jz  shift_snake
    label shift_snake_end
    ; ------

    ; ------ move snake's head
    imh rb  0               ; load snake's length
    iml rb  1
    ld  rd
    imh ra  3               ; add 0x3F
    iml ra  15
    add rd
    mov rd  ra              ; keep in rd
    
    imh rb  0               ; load snake's direction
    iml rb  0
    ld  rc
    imh ra  0
    iml ra  1               ; mask 0b00000001
    and rc
    jz  moving_up_fin
        mov rb  rd
        ld  rc
        imh ra  0
        iml ra  1
        add rb
        mov rb  ra
        imh ra  7
        iml ra  0
        add rc
        mov rc  ra
        imh ra  7
        iml ra  7
        and rc
        st  ra

        xor ra
        jz  moving_fin
    label moving_up_fin

    iml ra  2               ; mask 0b00000010
    and rc
    jz  moving_down_fin
        mov rb  rd
        ld  rc
        imh ra  0
        iml ra  1
        add rb
        mov rb  ra
        imh ra  1
        iml ra  0
        add rc
        mov rc  ra
        imh ra  7
        iml ra  7
        and rc
        st  ra

        xor ra
        jz  moving_fin
    label moving_down_fin

    iml ra  4               ; mask 0b00000100
    and rc
    jz  moving_right_fin
        mov rb  rd
        ld  rc
        imh ra  0
        iml ra  1
        add rb
        mov rb  ra
        imh ra  0
        iml ra  1
        add rc
        mov rc  ra
        imh ra  7
        iml ra  7
        and rc
        st  ra

        xor ra
        jz  moving_fin
    label moving_right_fin

    iml ra  8               ; mask 0b00001000
    and rc
    jz  moving_left_fin
        mov rb  rd
        ld  rc
        imh ra  0
        iml ra  1
        add rb
        mov rb  ra
        imh ra  0
        iml ra  7
        add rc
        mov rc  ra
        imh ra  7
        iml ra  7
        and rc
        st  ra

        xor ra
        jz  moving_fin
    label moving_left_fin

    label moving_fin
    ; ------

    ; ------ check if snake ate food
    imh rb  0               ; load snake's length
    iml rb  1
    ld  rc
    imh ra  4               ; add 0x40
    iml ra  0
    add rc
    mov rb  ra              ; load snake's head position
    ld  rc                  ; keep in rc

    imh rb  0               ; load food position
    iml rb  2
    ld  rd                  ; keep in rd
    mov ra  rd
    sub rc                  ; compare
    jz  eat_food
    xor ra
    jz  eat_fin

    ; ------ if snake did eat the food
    label eat_food
        imh rb  0               ; load snake's length
        iml rb  1
        ld  ra
        add rb                  ; inc by 1
        st  ra
        imh rb  4
        iml rb  0
        add rb
        mov rb  ra
        st  rd

        xor ra
        jz  gen_food

    label eat_fin
    ; ------

    ; ------ remove snake's tail
    imh rb  3               ; load snake's tail position
    iml rb  15
    ld  rc
    imh ra  8               ; add 0x80
    iml ra  0
    add rc
    mov rb  ra
    imh ra  2               ; set display to empty
    iml ra  0
    st  ra
    ; ------

    ; ------ draw snake's head
    imh rb  0               ; load snake's length
    iml rb  1
    ld  rb
    imh ra  4               ; add 0x40
    iml ra  0
    add rb
    mov rb  ra
    ld  rb
    imh ra  8               ; add 0x80
    iml ra  0
    add rb
    mov rb  ra
    imh ra  4               ; draw snake's head 'O'
    iml ra  15
    st  ra
    ; ------
    
    ; ------ draw food
    imh rb  0               ; load food position
    iml rb  2
    ld  ra
    imh rb  8               ; add 0x80
    iml rb  0
    add rb
    mov rb  ra
    imh ra  2               ; draw food '*'
    iml ra  10
    st  ra
    ; ------

    in  ra  0               ; update snake's direction
    jz  change_movement_end
        imh rb  0
        iml rb  0
        st  ra    
    label change_movement_end

    xor ra
    jz  loop

hlt